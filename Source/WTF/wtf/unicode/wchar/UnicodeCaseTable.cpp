
/* Table for lcase value of unicode chars
 * Incoming vlaues are offset by 0x100
 * (so char 0 is actually 0x100).  Ends at 0x17F
 */
const wchar_t lcase_tableA[] = {
    0x101, 0x101, 0x103, 0x103,
    0x105, 0x105, 0x107, 0x107,
    0x109, 0x109, 0x10B, 0x10B,
    0x10D, 0x10D, 0x10F, 0x10F,
    0x111, 0x111, 0x113, 0x113,
    0x115, 0x115, 0x117, 0x117,
    0x119, 0x119, 0x11B, 0x11B,
    0x11D, 0x11D, 0x11F, 0x11F,
    0x121, 0x121, 0x123, 0x123,
    0x125, 0x125, 0x127, 0x127,
    0x129, 0x129, 0x12B, 0x12B,
    0x12D, 0x12D, 0x12F, 0x12F,
    0x069, 0x131, 0x133, 0x133,
    0x135, 0x135, 0x137, 0x137,
    0x138, 0x13A, 0x13A, 0x13C,
    0x13C, 0x13E, 0x13E, 0x140,
    0x140, 0x142, 0x142, 0x144,
    0x144, 0x146, 0x146, 0x148,
    0x148, 0x149, 0x14B, 0x14B,
    0x14D, 0x14D, 0x14F, 0x14F,
    0x151, 0x151, 0x153, 0x153,
    0x155, 0x155, 0x157, 0x157,
    0x159, 0x159, 0x15B, 0x15B,
    0x15D, 0x15D, 0x15F, 0x15F,
    0x161, 0x161, 0x163, 0x163,
    0x165, 0x165, 0x167, 0x167,
    0x169, 0x169, 0x16B, 0x16B,
    0x16D, 0x16D, 0x16F, 0x16F,
    0x171, 0x171, 0x173, 0x173,
    0x175, 0x175, 0x177, 0x177,
    0x0FF, 0x17A, 0x17A, 0x17C,
    0x17C, 0x17E, 0x17E, 0x17F,
};

/* Table for ucase value of unicdoe chars
 * Incoming vlaues are offset by 0x100
 * (so char 0 is actually 0x100).  Ends at 0x17F
 */
const wchar_t ucase_tableA[] = {
    0x100, 0x100, 0x102, 0x102,
    0x104, 0x104, 0x106, 0x106,
    0x108, 0x108, 0x10A, 0x10A,
    0x10C, 0x10C, 0x10E, 0x10E,
    0x110, 0x110, 0x112, 0x112,
    0x114, 0x114, 0x116, 0x116,
    0x118, 0x118, 0x11A, 0x11A,
    0x11C, 0x11C, 0x11E, 0x11E,
    0x120, 0x120, 0x122, 0x122,
    0x124, 0x124, 0x126, 0x126,
    0x128, 0x128, 0x12A, 0x12A,
    0x12C, 0x12C, 0x12E, 0x12E,
    0x130, 0x049, 0x132, 0x132,
    0x134, 0x134, 0x136, 0x136,
    0x138, 0x139, 0x139, 0x13B,
    0x13B, 0x13D, 0x13D, 0x13F,
    0x13F, 0x141, 0x141, 0x143,
    0x143, 0x145, 0x145, 0x147,
    0x147, 0x2BC, 0x14A, 0x14A,
    0x14C, 0x14C, 0x14E, 0x14E,
    0x150, 0x150, 0x152, 0x152,
    0x154, 0x154, 0x156, 0x156,
    0x158, 0x158, 0x15A, 0x15A,
    0x15C, 0x15C, 0x15E, 0x15E,
    0x160, 0x160, 0x162, 0x162,
    0x164, 0x164, 0x166, 0x166,
    0x168, 0x168, 0x16A, 0x16A,
    0x16C, 0x16C, 0x16E, 0x16E,
    0x170, 0x170, 0x172, 0x172,
    0x174, 0x174, 0x176, 0x176,
    0x178, 0x179, 0x179, 0x17B, 
    0x17B, 0x17D, 0x17D, 0x053,
};


/* Table for lcase value of unicode chars
 * Incoming vlaues are offset by 0x400
 * (so char 0 is actually 0x400).  Ends at 0x45f
 */
const wchar_t lcase_tableB[] = {
    0x450, 0x451, 0x452, 0x453,
    0x454, 0x455, 0x456, 0x457,
    0x458, 0x459, 0x45A, 0x45B,
    0x45C, 0x45D, 0x45E, 0x45F,
    0x430, 0x431, 0x432, 0x433,
    0x434, 0x435, 0x436, 0x437,
    0x438, 0x439, 0x43A, 0x43B,
    0x43C, 0x43D, 0x43E, 0x43F,
    0x440, 0x441, 0x442, 0x443,
    0x444, 0x445, 0x446, 0x447,
    0x448, 0x449, 0x44A, 0x44B,
    0x44C, 0x44D, 0x44E, 0x44F,
    0x430, 0x431, 0x432, 0x433,
    0x434, 0x435, 0x436, 0x437,
    0x438, 0x439, 0x43A, 0x43B,
    0x43C, 0x43D, 0x43E, 0x43F,
    0x440, 0x441, 0x442, 0x443,
    0x444, 0x445, 0x446, 0x447,
    0x448, 0x449, 0x44A, 0x44B,
    0x44C, 0x44D, 0x44E, 0x44F,
    0x450, 0x451, 0x452, 0x453,
    0x454, 0x455, 0x456, 0x457,
    0x458, 0x459, 0x45A, 0x45B,
    0x45C, 0x45D, 0x45E, 0x45F,
    0x461, 0x461, 0x463, 0x463,
    0x465, 0x465, 0x467, 0x467,
    0x469, 0x469, 0x46B, 0x46B,
    0x46D, 0x46D, 0x46F, 0x46F,
    0x471, 0x471, 0x473, 0x473,
    0x475, 0x475, 0x477, 0x477,
    0x479, 0x479, 0x47B, 0x47B,
    0x47D, 0x47D, 0x47F, 0x47F,
    0x481, 0x481,

};

/* Table for ucase value of unicode chars
 * Incoming vlaues are offset by 0x400
 * (so char 0 is actually 0x400).  Ends at 0x45f
 */
const wchar_t ucase_tableB[] = {
    0x400, 0x401, 0x402, 0x403,
    0x404, 0x405, 0x406, 0x407,
    0x408, 0x409, 0x40A, 0x40B,
    0x40C, 0x40D, 0x40E, 0x40F,
    0x410, 0x411, 0x412, 0x413,
    0x414, 0x415, 0x416, 0x417,
    0x418, 0x419, 0x41A, 0x41B,
    0x41C, 0x41D, 0x41E, 0x41F,
    0x420, 0x421, 0x422, 0x423,
    0x424, 0x425, 0x426, 0x427,
    0x428, 0x429, 0x42A, 0x42B,
    0x42C, 0x42D, 0x42E, 0x42F,
    0x410, 0x411, 0x412, 0x413,
    0x414, 0x415, 0x416, 0x417,
    0x418, 0x419, 0x41A, 0x41B,
    0x41C, 0x41D, 0x41E, 0x41F,
    0x420, 0x421, 0x422, 0x423,
    0x424, 0x425, 0x426, 0x427,
    0x428, 0x429, 0x42A, 0x42B,
    0x42C, 0x42D, 0x42E, 0x42F,
    0x400, 0x401, 0x402, 0x403,
    0x404, 0x405, 0x406, 0x407,
    0x408, 0x409, 0x40A, 0x40B,
    0x40C, 0x40D, 0x40E, 0x40F,
    0x460, 0x460, 0x462, 0x462,
    0x464, 0x464, 0x466, 0x466,
    0x468, 0x468, 0x46A, 0x46A,
    0x46C, 0x46C, 0x46E, 0x46E,
    0x470, 0x470, 0x472, 0x472,
    0x474, 0x474, 0x476, 0x476,
    0x478, 0x478, 0x47A, 0x47A,
    0x47C, 0x47C, 0x47E, 0x47E,
    0x480, 0x480, 
};
